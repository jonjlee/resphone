import"./styles-Btk84DEy.js";document.addEventListener("DOMContentLoaded",()=>{const k="https://pub-64c5ab9ca3b24895a1f7903d51639e2d.r2.dev/resphone.json",C="https://resphone.jonjlee.workers.dev";if(!sessionStorage.getItem("authenticated")){window.location.href="index.html";return}const r=document.getElementById("applyButton"),g=document.getElementById("editContactsButton"),m=document.getElementById("customOption"),h=document.getElementById("customNumberField"),y=document.getElementById("customNumberInput"),b=document.getElementById("customNumberError"),i=document.querySelector(".number-options"),N=document.getElementById("toggleUpdates"),$=document.getElementById("updatesContent"),O=document.getElementById("updatesList");let u=null,l=null,S=null,d=!1;g.addEventListener("click",()=>{!d&&m.classList.contains("selected")&&(m.classList.remove("selected"),h.style.display="none",y.value="",b.style.display="none",u=null),d=!d;const e=g.querySelector(".icon"),a=e==null?void 0:e.querySelector("i");d?(S=JSON.parse(JSON.stringify(l)),e.style.display="inline-block",a&&(a.className="fas fa-times"),g.querySelector("span:not(.icon)").textContent="Discard Changes"):(S=null,e.style.display="inline-block",a&&(a.className="fas fa-edit"),g.querySelector("span:not(.icon)").textContent="Edit Contacts"),r.textContent=d?"Save Changes":"Apply Forwarding",f(d?S:l)}),N.addEventListener("click",()=>{const e=$.style.display==="none";$.style.display=e?"block":"none",N.querySelector(".icon i").className=e?"fas fa-chevron-up":"fas fa-chevron-down"});function q(e){O.innerHTML="",e.slice().reverse().forEach(a=>{const o=document.createElement("li");o.innerHTML=`<strong>${a.ts}:</strong> ${a.update}`,O.appendChild(o)})}document.querySelector(".logout-button").addEventListener("click",e=>{e.preventDefault(),sessionStorage.removeItem("authenticated"),sessionStorage.removeItem("password"),window.location.href="index.html"});function f(e){if(!e)return;i.querySelectorAll(".number-option:not(#customOption)").forEach(n=>n.remove());const o=i.querySelector(".has-text-centered");if(o&&o.remove(),m.style.display=d?"none":"block",h.style.display="none",y.value="",b.style.display="none",d){e.contacts.forEach((c,t)=>{const s=document.createElement("div");s.className="number-option edit-mode",s.innerHTML=`
                    <div class="field is-horizontal">
                        <div class="field-body">
                            <div class="field">
                                <div class="control">
                                    <input class="input contact-name" type="text" value="${c.name}" placeholder="Name">
                                </div>
                            </div>
                            <div class="field">
                                <div class="control">
                                    <input class="input contact-phone" type="tel" value="${c.phone}" placeholder="Phone">
                                </div>
                            </div>
                            <div class="field">
                                <div class="control buttons">
                                    <button class="button is-small move-up" title="Move Up">
                                        <span class="icon">
                                            <i class="fas fa-arrow-up"></i>
                                        </span>
                                    </button>
                                    <button class="button is-small move-down" title="Move Down">
                                        <span class="icon">
                                            <i class="fas fa-arrow-down"></i>
                                        </span>
                                    </button>
                                    <button class="button is-small delete-contact">
                                        <span class="icon">
                                            <i class="far fa-trash-alt"></i>
                                        </span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `,i.insertBefore(s,m);const E=s.querySelector(".contact-name"),L=s.querySelector(".contact-phone");E.addEventListener("blur",()=>{e.contacts[t].name=E.value}),L.addEventListener("blur",()=>{e.contacts[t].phone=L.value}),s.querySelector(".delete-contact").addEventListener("click",()=>{e.contacts.splice(t,1),f(e)}),s.querySelector(".move-up").addEventListener("click",()=>{if(t>0){const v=e.contacts[t];e.contacts[t]=e.contacts[t-1],e.contacts[t-1]=v,e.selected===v.phone&&(e.selected=v.phone),f(e);const w=i.querySelector(`.edit-mode:nth-child(${t})`);w&&w.classList.add("selected")}}),s.querySelector(".move-down").addEventListener("click",()=>{if(t<e.contacts.length-1){const v=e.contacts[t];e.contacts[t]=e.contacts[t+1],e.contacts[t+1]=v,e.selected===v.phone&&(e.selected=v.phone),f(e);const w=i.querySelector(`.edit-mode:nth-child(${t+2})`);w&&w.classList.add("selected")}})});const n=document.createElement("div");n.className="number-option",n.innerHTML=`
                <div class="has-text-right">
                    <button class="button is-primary is-rounded is-small">
                        <span class="icon">
                            <i class="fas fa-plus"></i>
                        </span>
                        <span>Add Contact</span>
                    </button>
                </div>
            `,i.insertBefore(n,m),n.querySelector("button").addEventListener("click",()=>{e.contacts.push({name:"",phone:""}),f(e)})}else{e.contacts.forEach(t=>{const s=document.createElement("div");s.className="number-option",s.dataset.value=t.phone,s.dataset.name=t.name,s.textContent=`${t.name} - (${t.phone.slice(0,3)}) ${t.phone.slice(3,6)}-${t.phone.slice(6)}`,i.insertBefore(s,m)});const n=e.selected,c=i.querySelector(`[data-value="${n}"]`);c?(c.classList.add("selected"),u=c):(m.classList.add("selected"),u=m,h.style.display="block",y.value=n)}I()}function I(){const e=i.querySelectorAll(".number-option");e.forEach(a=>{a.addEventListener("click",function(){e.forEach(o=>o.classList.remove("selected")),this.classList.add("selected"),u=this,this.dataset.value==="custom"?h.style.display="block":(h.style.display="none",y.value="",b.style.display="none")})})}y.addEventListener("input",function(){const e=this.value.trim();e&&!/^\d+$/.test(e)?b.style.display="block":b.style.display="none"}),r.addEventListener("click",async function(){if(d){const e=[],a=i.querySelectorAll(".edit-mode");let o=!1;if(a.forEach(n=>{const c=n.querySelector(".contact-name").value.trim(),t=n.querySelector(".contact-phone").value.trim(),s=/^(1?\d{10})$/.test(t);c&&t&&(s?e.push({name:c,phone:t}):o=!0)}),o){p("Phone numbers must be 10 digits","danger");return}if(e.length===0){p("Please add at least one valid contact","danger");return}try{r.disabled=!0,r.textContent="Saving...",p("Saving contacts...","info");const n=sessionStorage.getItem("password"),c=Math.floor(Date.now()/1e3),t=await crypto.subtle.digest("SHA-256",new TextEncoder().encode(`${c}|${n}`)).then(E=>Array.from(new Uint8Array(E)).map(L=>L.toString(16).padStart(2,"0")).join("")),s=await fetch(`${C}/update`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:t,utc:c,contacts:S.contacts,selected:l.selected})});if(!s.ok)throw new Error("Failed to update contacts");l=await s.json(),S=null,q(l.updates),p("Contacts updated successfully","success"),d=!1,g.querySelector("span:not(.icon)").textContent="Edit Contacts",r.textContent="Apply Forwarding",f(l)}catch(n){console.error("Error updating contacts:",n),p("Failed to update contacts","danger")}finally{r.disabled=!1}}else{if(!u){alert("Please select a forwarding number");return}let e;if(u.dataset.value==="custom"){if(e=y.value.trim(),!e||!/^\d+$/.test(e)){b.style.display="block";return}const a=l.contacts.find(o=>o.phone===e);if(a){const o=i.querySelector(`[data-value="${e}"]`);o&&(i.querySelectorAll(".number-option").forEach(n=>n.classList.remove("selected")),o.classList.add("selected"),u=o,h.style.display="none",y.value="",e=a.phone)}}else e=u.dataset.value;try{r.disabled=!0,r.textContent="Applying...",p("Applying forwarding number...","info");const a=sessionStorage.getItem("password"),o=Math.floor(Date.now()/1e3),n=await crypto.subtle.digest("SHA-256",new TextEncoder().encode(`${o}|${a}`)).then(s=>Array.from(new Uint8Array(s)).map(E=>E.toString(16).padStart(2,"0")).join("")),c=await fetch(`${C}/update`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:n,utc:o,contacts:l.contacts,selected:e})});if(!c.ok)throw new Error("Failed to update configuration");l=await c.json(),q(l.updates),p("Forwarding number updated successfully","success");const t=i.querySelector(`[data-value="${l.selected}"]`);t&&(i.querySelectorAll(".number-option").forEach(s=>s.classList.remove("selected")),t.classList.add("selected"),u=t,h.style.display="none",y.value="")}catch(a){console.error("Error updating forwarding number:",a),p("Failed to update forwarding number","danger")}finally{r.disabled=!1,r.textContent="Apply Forwarding"}}});function p(e,a="info"){const o=document.querySelector(".notification");o&&o.remove();const n=document.createElement("div");n.className=`notification is-${a}`,n.textContent=e;const c=document.querySelector(".box");c.parentNode.insertBefore(n,c.nextSibling)}async function A(){try{const e=await fetch(k,{cache:"no-store"});if(!e.ok)throw new Error("Failed to fetch configuration");l=await e.json(),f(l),l.updates&&q(l.updates)}catch(e){console.error("Error fetching configuration:",e),p("Failed to load forwarding numbers","danger")}}A()});
